.c-blob{id: id, data: { controller: :blob }, class: [audio? && 'w-50 d-inline-block']}
  %figure{class:  "attachment attachment--#{representable? ? 'preview' : 'file'} attachment--#{filename.extension}"}
    - if audio?
      .audio-player.d-flex
        %div.w-100
          %audio.w-100{controls: true, preload: :metadata, data: { 'blob-target' => :audio }}
            %source{src: url, type: content_type}
          = fig_caption
          - if transcription_job.present?
            %turbo-frame.transcription-container{ data: { 'blob-target' => 'transcriptionSection' },
                                                  id: dom_id(transcription_job) }
              = render TranscriptionJobComponent.new(transcription_job:, user:)
    - elsif representable?
      = render MoreInfoComponent.new(id: 'blob_details', src: more_info_blob_path) do |component|
        = component.with_wrapped do
          = image_tag representation(**variant_options)
      = fig_caption
    - else
      %figcaption.attachment__caption
        - if caption = blob.try(:caption)
          = caption
        - else
          %span.attachment__name= blob.filename
          %span.attachment__size= number_to_human_size blob.byte_size


