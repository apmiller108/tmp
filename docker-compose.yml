version: "3.6"

x-base: &base
  env_file: .env
  tty: true
  stdin_open: true
  build:
    context: .
    dockerfile: Dockerfile.dev

services:
  database:
    image: postgres:16
    restart: always
    volumes:
      - 'postgres:/var/lib/postgresql/data'
    ports:
      - "5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
  redis:
    image: redis:7
    restart: always
    volumes:
      - "redis:/data"
    ports:
      - "6379"
  ws:
    image: anycable/anycable-go:1.4
    ports:
      - '8085:8085'
    env_file: .env
    depends_on:
      - "redis"
  web:
    <<: *base
    command: bash -c "rm -f tmp/pids/server.pid && /rails/bin/dev"
    restart: always
    volumes:
      - ".:/rails"
      - "/rails/node_modules"
    ports:
      - "3000:3000"
    links:
      - "database"
      - "redis"
  sidekiq:
    <<: *base
    depends_on:
      - "database"
      - "redis"
    command: "bundle exec sidekiq"
    restart: always
    volumes:
      - ".:/rails"
      - "/rails/tmp" # don't mount tmp dir
  anycable:
    <<: *base
    command: bundle exec anycable
    volumes:
      - ".:/rails"
    ports:
      - '50051'
    depends_on:
      - "database"
      - "ws"
    env_file:
      - '.env'
      - '.anycable.env'
  chrome: # docker-compose up -d chrome
    image: browserless/chrome:latest # See https://www.browserless.io/docs/docker
    ports:
      - "3333:3333"
    environment:
      PORT: 3333
      CONNECTION_TIMEOUT: -1 # No timeout

volumes:
  redis:
  postgres:
